<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Text on Game Experiments</title>
    <link>https://richard-porteous.github.io/tags/text/</link>
    <description>Recent content in Text on Game Experiments</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en_US</language>
    <lastBuildDate>Thu, 04 Jan 2024 11:10:13 -0700</lastBuildDate>
    <atom:link href="https://richard-porteous.github.io/tags/text/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Use a Hugo theme example</title>
      <link>https://richard-porteous.github.io/posts/hugo/site_from_example/</link>
      <pubDate>Thu, 04 Jan 2024 11:10:13 -0700</pubDate>
      <guid>https://richard-porteous.github.io/posts/hugo/site_from_example/</guid>
      <description>Using the Tikva theme example site If you want to start a site and have a definite theme in mind. If its not 100% compatible with what you have been doing, I find this method to be best.&#xA;create your hugo site grab a theme from the theme store and clone it into themes go to its example site folder and copy the site into yours if an older theme, rename config.</description>
    </item>
    <item>
      <title>Hugo site on github</title>
      <link>https://richard-porteous.github.io/posts/hugo/site_on_github/</link>
      <pubDate>Thu, 04 Jan 2024 10:59:46 -0700</pubDate>
      <guid>https://richard-porteous.github.io/posts/hugo/site_on_github/</guid>
      <description>Steps we follow 1. create 2 github repositories. name.github.io and hugoblog&#xD;2. Get Hugo and git&#xD;3. Create the hugo site locally&#xD;4. init git for hugoblog and add public as a git submodule&#xD;5. Add a theme (possibly as a submodule)&#xD;6. Test and fix site or theme&#xD;7. Add a post and about&#xD;10. Publish&#xD;Create the github repositories Go to github.com and if you dont have an account cretae a free one (for now).</description>
    </item>
    <item>
      <title>Our first pygame - Sprites - part 5</title>
      <link>https://richard-porteous.github.io/posts/python/our_first_pygame_5/</link>
      <pubDate>Fri, 10 Nov 2023 13:19:59 -0700</pubDate>
      <guid>https://richard-porteous.github.io/posts/python/our_first_pygame_5/</guid>
      <description>This is a little ambitious. Currently we are just experimenting. Soon we will make a few choices and make a simple game. Then we will refactor, and build another game. The first game I think will be a top down and the next from the side likely a platform game. Each time we will make changes to the skeleton to improve reusability. Is that a word? Spell check thought so!</description>
    </item>
    <item>
      <title>Our first pygame - Refactoring - part 4</title>
      <link>https://richard-porteous.github.io/posts/python/our_first_pygame_4/</link>
      <pubDate>Fri, 10 Nov 2023 13:19:53 -0700</pubDate>
      <guid>https://richard-porteous.github.io/posts/python/our_first_pygame_4/</guid>
      <description>I&amp;rsquo;d like to make a small change. I want to put the image path in a variable, for now, img_path is a good name&#xA;#Somewhere near the top of our code we will place the following&#xD;img_path = &amp;#39;images/&amp;#39;&#xD;#Then we replace our existing player load image code with the following concatenation&#xD;player = pygame.image.load(img_path + &amp;#34;blue_body_square.png&amp;#34;) Run the app and it does the same.&#xA;The reason for this change is that the choice for images (or assets) tends to change.</description>
    </item>
    <item>
      <title>Our first pygame - moving images - part 3</title>
      <link>https://richard-porteous.github.io/posts/python/our_first_pygame_3/</link>
      <pubDate>Mon, 11 Sep 2023 13:19:37 -0700</pubDate>
      <guid>https://richard-porteous.github.io/posts/python/our_first_pygame_3/</guid>
      <description>Now we get to play a little. Lets simply draw a simple background and then download some premade shapes that we can move around. First head over to kenney.nl and get the following images to follow along. The files we want are in the png/default folder. The larger images are 80x80. If you are adventurous try other images.&#xA;I&amp;rsquo;m going to use individual 2d png files for each item to start.</description>
    </item>
    <item>
      <title>Our first pygame - part 2</title>
      <link>https://richard-porteous.github.io/posts/python/our_first_pygame_2/</link>
      <pubDate>Fri, 11 Aug 2023 13:19:30 -0700</pubDate>
      <guid>https://richard-porteous.github.io/posts/python/our_first_pygame_2/</guid>
      <description>All Pygame games share some code in common. Setup, game-loop, user-input, audio etc. etc. We will start building the common code while creating a game and we will refactor it into something reusable as we go.&#xA;Assuming we are new to games or pygame or python we will begin simply by creating an object that moves and interacts with the environment. Picture&#xA;I assume you know some python. However if you just read the python as English it will understandable.</description>
    </item>
    <item>
      <title>Resync Windows time with task scheduler</title>
      <link>https://richard-porteous.github.io/posts/windows/fix_windows_clock/</link>
      <pubDate>Tue, 28 Feb 2023 11:25:07 -0700</pubDate>
      <guid>https://richard-porteous.github.io/posts/windows/fix_windows_clock/</guid>
      <description>NOTE: Time sync should be done as little as possible. See the recommendations on the time server sites. i.e. https://www.pool.ntp.org&#xA;Tired of forcing your time to resync manually?&#xA;If you dual boot or your computer just doesn&amp;rsquo;t keep time after it has been shut down for a while, you may be a little frustrated with the default setting for windows.&#xA;Linux when booted will set the system time clock to UTC and display your local time.</description>
    </item>
    <item>
      <title>Using python</title>
      <link>https://richard-porteous.github.io/posts/python/using_python/</link>
      <pubDate>Mon, 30 Jan 2023 13:09:27 -0700</pubDate>
      <guid>https://richard-porteous.github.io/posts/python/using_python/</guid>
      <description>I have used cmd on windows, you can use whatever terminal you know how to open. A shortcut on windows is to use explorer to go to the folder you want and type cmd in the bar above.&#xA;Windows - python, py commands should work Linux/Mac python or python3 should work&#xA;run the following:&#xA;python --version&#xD;if the response is not python 3 or higher then i recommend you check the py command or the python3 command</description>
    </item>
    <item>
      <title>Using Git</title>
      <link>https://richard-porteous.github.io/posts/general/using_git/</link>
      <pubDate>Mon, 30 Jan 2023 13:01:01 -0700</pubDate>
      <guid>https://richard-porteous.github.io/posts/general/using_git/</guid>
      <description>It is highly recommended that you use GIT so you keep track of your chnges and don&amp;rsquo;t lose your work.&#xA;What we will do this Lesson Learn to add your project to a git repository. Know how to use a free online host. git-gui, Sourcetree, etc Git is simple to learn. I suggest using a Git Client for viewing your history or everything else if you are a beginner.&#xA;We use the command line wherever we can.</description>
    </item>
    <item>
      <title>Winforms_mvc</title>
      <link>https://richard-porteous.github.io/posts/windows/winforms_mvc/</link>
      <pubDate>Sun, 09 Jan 2022 11:20:41 -0700</pubDate>
      <guid>https://richard-porteous.github.io/posts/windows/winforms_mvc/</guid>
      <description>Old apps are often useful but difficult to replace. Often they become this huge mess of tangled code that no one can fix without fear of introducing more bugs. You will hear programmers say, &amp;ldquo;This app needs to be re-written&amp;rdquo;. Well, rewriting is not the only option.&#xA;Get to know current practices I&amp;rsquo;m no expert on this topic. I had 15 years of experience before I started even looking at this.</description>
    </item>
  </channel>
</rss>
